<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
seek($<#=ScriptBank.RAMAddress.ToString("x")#>)
<#=FormatEntryName(ScriptBank.Name)#>:
<# foreach(var pointerName in GetPointers()) { #>
    dw <#=pointerName#>
<# } #>

<#
for(int entryIndex = 0; entryIndex < Entries.Count; ++entryIndex)
{
    var entry = Entries[entryIndex];

    int pointerCount = 0;
    Queue<int> pointerIndices = new(entry.Pointers);

    OutputState state = OutputState.OutputDB;

    if (entry.Data.Length == 0)
    {
#>
<#= GenerateEntryName(entryIndex, pointerCount) #>:
<#
    }

    int dataIndex = 0;
    while(dataIndex < entry.Data.Length)
    {
        switch (state)
        {
            case OutputState.PrintPointerLabel:
            {
#>
<#= GenerateEntryName(entryIndex, pointerCount) #>:
<#
                pointerCount++;
                state = OutputState.OutputDB;
                break;
            }
            case OutputState.OutputDB:
            {
                if (pointerIndices.Count > 0 && pointerIndices.Peek() == dataIndex)
                {
                    pointerIndices.Dequeue();
                    state = OutputState.PrintPointerLabel;
                }
                else
                {
#>
    db <#= $"${entry.Data[dataIndex]:x}" #>
<#
                    dataIndex++;
                }
                break;
            }
        }
    }
#>
    db $<#=ScriptBank.Terminator.ToString("x")#> 
<#
}
#>

<# if (ScriptBank.EndRAMAddress.HasValue) { #>
if pc() > $<#=ScriptBank.EndRAMAddress.Value.ToString("x")#> {
    error "<#=string.Format(LibResource.bassErrorOverflow, ScriptBank.Name)#>"
}
<# } #>